version: "3.9"

services:

  tests:
    container_name: tests
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: bash -c 'python3 pytest .'

  migrations:
    container_name: migrations
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    command: bash -c 'python3 manage.py makemigrations
      && python3 manage.py migrate'

  db:
    container_name: postgres_db
    image: postgres:15.1-alpine
    restart: always
    environment:
      PGUSER: ${DB_USER}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_USER_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5434:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5


volumes:
  pg_data:
